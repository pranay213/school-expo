name: Build iOS Development App

on:
  push:
    branches:
      - main

jobs:
  build-ios:
    runs-on: macos-latest  # Use GitHub-hosted macOS runner

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Ensure Expo CLI is Installed
        run: yarn global add expo-cli

      - name: Convert Expo to Native iOS Project
        run: expo prebuild --platform ios

      - name: Verify iOS Project Files
        run: |
          echo "✅ Listing iOS project files:"
          ls -la ios

      - name: Install CocoaPods Dependencies
        run: |
          if [ -d "ios" ]; then
            cd ios
            pod install
          else
            echo "❌ iOS directory not found. Expo prebuild may have failed."
            exit 1
          fi

      - name: Detect Xcode Project
        id: detect_project
        run: |
          cd ios
          ls -la  # Print directory contents for debugging
          
          if ls *.xcworkspace 1> /dev/null 2>&1; then
            WORKSPACE=$(ls *.xcworkspace | head -n 1)
            echo "XCODE_WORKSPACE=$WORKSPACE" >> $GITHUB_ENV
            echo "Using workspace: $WORKSPACE"
          elif ls *.xcodeproj 1> /dev/null 2>&1; then
            PROJECT=$(ls *.xcodeproj | head -n 1)
            echo "XCODE_PROJECT=$PROJECT" >> $GITHUB_ENV
            echo "Using project: $PROJECT"
          else
            echo "❌ No Xcode workspace or project found!"
            exit 1
          fi

      - name: Build iOS App for Simulator
        run: |
          cd ios
          if [ -n "$XCODE_WORKSPACE" ]; then
            xcodebuild -workspace "$XCODE_WORKSPACE" \
              -scheme "$(basename "$XCODE_WORKSPACE" .xcworkspace)" \
              -sdk iphonesimulator \
              -configuration Debug \
              -derivedDataPath build
          elif [ -n "$XCODE_PROJECT" ]; then
            xcodebuild -project "$XCODE_PROJECT" \
              -scheme "$(basename "$XCODE_PROJECT" .xcodeproj)" \
              -sdk iphonesimulator \
              -configuration Debug \
              -derivedDataPath build
          fi

      - name: Upload iOS App Artifact
        uses: actions/upload-artifact@v4  # Using the latest version
        with:
          name: ios-app
          path: ios/build/Build/Products/Debug-iphonesimulator/*.app
          retention-days: 7  # Optional: Keep artifact for 7 days
